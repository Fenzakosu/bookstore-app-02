form {
    background: $white;
    padding: $spacing-xxl;
    border-radius: $border-radius-xl;
    box-shadow: $shadow-lg;
    max-width: 600px;
    margin: $spacing-xxl auto;
    position: relative;
    overflow: hidden;
    
    // Add a colorful accent border at the top
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: $gradient-primary;
    }
    
    @include mobile {
        margin: $spacing-lg;
        padding: $spacing-lg;
    }

    h2 {
        color: $primary-color;
        margin-bottom: $spacing-xl;
        font-weight: 600;
        text-align: center;
        font-size: $font-size-xxl;
        position: relative;
        
        &::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 2px;
            background: $gradient-accent;
            border-radius: 2px;
        }
        
        @include mobile {
            font-size: $font-size-xl;
        }
    }

    label {
        display: block;
        margin-bottom: $spacing-sm;
        font-weight: 600;
        color: $dark-gray;
        font-size: $font-size-base;
        position: relative;
        
        // Add emoji icons for visual appeal
        &[for*="title"]::before { content: 'üìö '; }
        &[for*="page"]::before { content: 'üìÑ '; }
        &[for*="isbn"]::before { content: 'üîñ '; }
        &[for*="date"]::before { content: 'üìÖ '; }
        &[for*="author"]::before { content: 'üë§ '; }
        &[for*="publisher"]::before { content: 'üè¢ '; }
    }

    input,
    select {
        width: 100%;
        padding: $spacing-lg;
        border: 2px solid lighten($gray, 20%);
        border-radius: $border-radius-md;
        margin-bottom: $spacing-lg;
        font-family: $font-stack;
        font-size: $font-size-base;
        transition: all 0.3s ease;
        background: $white;
        box-sizing: border-box;

        &:focus {
            border-color: $primary-color;
            outline: none;
            box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
            transform: translateY(-1px);
        }
        
        &:hover {
            border-color: $primary-light;
        }
        
        &::placeholder {
            color: $gray;
            opacity: 0.7;
        }
    }
    
    // Special styling for select dropdowns
    select {
        cursor: pointer;
        background-image: url('data:image/svg+xml;charset=US-ASCII,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 4 5"><path fill="%23666" d="M2 0L0 2h4zm0 5L0 3h4z"/></svg>');
        background-repeat: no-repeat;
        background-position: right 12px center;
        background-size: 12px;
        appearance: none;
        
        &:focus {
            background-image: url('data:image/svg+xml;charset=US-ASCII,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 4 5"><path fill="%234a90e2" d="M2 0L0 2h4zm0 5L0 3h4z"/></svg>');
        }
    }

    button[type="submit"] {
        @include button-primary;
        width: 100%;
        padding: $spacing-lg $spacing-xl;
        font-size: $font-size-large;
        font-weight: 600;
        margin-top: $spacing-lg;
        
        &::before {
            content: '‚ú® ';
        }
        
        &:disabled {
            background: $gray;
            cursor: not-allowed;
            transform: none;
            
            &:hover {
                background: $gray;
                box-shadow: $shadow-sm;
            }
        }
    }

    // Error message styling
    p {
        color: $error-color;
        margin: #{-$spacing-md} 0 $spacing-lg 0;
        font-size: $font-size-small;
        font-weight: 500;
        padding: $spacing-sm $spacing-md;
        background: lighten($error-color, 45%);
        border-left: 3px solid $error-color;
        border-radius: $border-radius-sm;
        
        &::before {
            content: '‚ö†Ô∏è ';
        }
    }
    
    // Success state (can be used for feedback)
    &.success {
        &::before {
            background: $gradient-success;
        }
        
        h2 {
            color: $success-color;
        }
    }
    
    // Loading state
    &.loading {
        opacity: 0.7;
        pointer-events: none;
        
        button[type="submit"] {
            background: $gray;
            
            &::before {
                content: '‚è≥ ';
                animation: spin 1s linear infinite;
            }
        }
    }
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}
